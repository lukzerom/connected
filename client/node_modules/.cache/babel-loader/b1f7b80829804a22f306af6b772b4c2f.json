{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/pages/MyStations.jsx\";\nimport React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport StationContext from \"../../context/stations/stationContext\";\nimport UserStation from \"../layout/UserStation\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst useStyles = makeStyles(() => ({\n  stationsWrapper: {\n    backgroundColor: \"#f4f6ff\",\n    minHeight: \"100vh\",\n    padding: \"0 10vw\"\n  },\n  topPanel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"1rem\"\n  },\n  title: {\n    color: \"#127681\"\n  },\n  loading: {\n    margin: \"10rem auto\"\n  }\n}));\n\nconst MyStations = () => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const stationContext = useContext(StationContext);\n  const {\n    loadUser\n  } = authContext;\n  const {\n    userstations,\n    getUserStations,\n    loading\n  } = stationContext;\n  useEffect(() => {\n    loadUser();\n    getUserStations(); //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.stationsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    className: classes.topPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"My stations\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/add-station\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    startIcon: /*#__PURE__*/React.createElement(AddToPhotosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Add station\")))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, userstations.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Add your first station :)\") : userstations.map(userstation => {\n    return /*#__PURE__*/React.createElement(UserStation, {\n      key: userstation._id,\n      station: userstation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    });\n  })));\n};\n\nexport default MyStations;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/pages/MyStations.jsx"],"names":["React","useContext","useEffect","AuthContext","StationContext","UserStation","makeStyles","Box","Typography","Divider","Button","Grid","AddToPhotosIcon","Link","CircularProgress","useStyles","stationsWrapper","backgroundColor","minHeight","padding","topPanel","display","justifyContent","margin","title","color","loading","MyStations","classes","authContext","stationContext","loadUser","userstations","getUserStations","textDecoration","length","map","userstation","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport StationContext from \"../../context/stations/stationContext\";\r\nimport UserStation from \"../layout/UserStation\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  stationsWrapper: {\r\n    backgroundColor: \"#f4f6ff\",\r\n    minHeight: \"100vh\",\r\n    padding: \"0 10vw\",\r\n  },\r\n  topPanel: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"1rem\",\r\n  },\r\n  title: {\r\n    color: \"#127681\",\r\n  },\r\n  loading: {\r\n    margin: \"10rem auto\",\r\n  },\r\n}));\r\n\r\nconst MyStations = () => {\r\n  const classes = useStyles();\r\n  const authContext = useContext(AuthContext);\r\n  const stationContext = useContext(StationContext);\r\n\r\n  const { loadUser } = authContext;\r\n  const { userstations, getUserStations, loading } = stationContext;\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n    getUserStations();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.stationsWrapper}>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={10} className={classes.topPanel}>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            My stations\r\n          </Typography>\r\n          <Link to=\"/add-station\" style={{ textDecoration: \"none\" }}>\r\n            <Button variant=\"contained\" startIcon={<AddToPhotosIcon />}>\r\n              Add station\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Divider />\r\n\r\n      {loading ? (\r\n        <Typography variant=\"h6\" align=\"center\" className={classes.title}>\r\n          <CircularProgress color=\"primary\" className={classes.loading} />\r\n        </Typography>\r\n      ) : (\r\n        <Box>\r\n          {userstations.length === 0 ? (\r\n            <Typography variant=\"h6\" align=\"center\" className={classes.title}>\r\n              Add your first station :)\r\n            </Typography>\r\n          ) : (\r\n            userstations.map((userstation) => {\r\n              return (\r\n                <UserStation key={userstation._id} station={userstation} />\r\n              );\r\n            })\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyStations;\r\n"]},"metadata":{},"sourceType":"module"}