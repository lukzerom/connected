{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/Map.jsx\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport StationContext from \"../../context/stations/stationContext\";\nimport bolt from \"../../assets/bolt.svg\";\nimport L from \"leaflet\";\nconst myIcon = L.icon({\n  iconUrl: bolt,\n  iconSize: [50, 50],\n  iconAnchor: [25, 50],\n  popupAnchor: [-3, -76]\n});\n\nconst ChargerMap = () => {\n  const stationContext = useContext(StationContext);\n  useEffect(() => {\n    getStations(); //eslint-disable-next-line\n  }, []);\n  const {\n    stations,\n    getStations\n  } = stationContext;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: [50.270873, 16.25341],\n    zoom: 5,\n    scrollWheelZoom: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), stations !== null ? stations.map(station => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: station._id,\n      position: [station.latitude, station.longitude],\n      icon: myIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, station.name)));\n  }) : null));\n};\n\nexport default ChargerMap;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/Map.jsx"],"names":["React","useContext","useEffect","Map","TileLayer","Marker","Popup","StationContext","L","myIcon","icon","iconUrl","bolt","iconSize","iconAnchor","popupAnchor","ChargerMap","stationContext","getStations","stations","map","station","_id","latitude","longitude","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,OAAOC,CAAP,MAAc,SAAd;AAEA,MAAMC,MAAM,GAAGD,CAAC,CAACE,IAAF,CAAO;AACpBC,EAAAA,OAAO,EAAEC,IADW;AAEpBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFU;AAGpBC,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAHQ;AAIpBC,EAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,EAAN;AAJO,CAAP,CAAf;;AAOA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,cAAc,GAAGhB,UAAU,CAACM,cAAD,CAAjC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAM;AAAEC,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,MAA4BD,cAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,QAAZ,CAAb;AAAoC,IAAA,IAAI,EAAE,CAA1C;AAA6C,IAAA,eAAe,EAAE,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAC,oDADN;AAEE,IAAA,WAAW,EAAC,0EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGE,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACxB,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,MAAA,QAAQ,EAAE,CAACD,OAAO,CAACE,QAAT,EAAmBF,OAAO,CAACG,SAA3B,CAFZ;AAGE,MAAA,IAAI,EAAEf,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKY,OAAO,CAACI,IAAb,CADF,CALF,CADF;AAWD,GAZD,CADH,GAcG,IAnBN,CADF,CADF;AAyBD,CAnCD;;AAqCA,eAAeT,UAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport StationContext from \"../../context/stations/stationContext\";\r\nimport bolt from \"../../assets/bolt.svg\";\r\nimport L from \"leaflet\";\r\n\r\nconst myIcon = L.icon({\r\n  iconUrl: bolt,\r\n  iconSize: [50, 50],\r\n  iconAnchor: [25, 50],\r\n  popupAnchor: [-3, -76],\r\n});\r\n\r\nconst ChargerMap = () => {\r\n  const stationContext = useContext(StationContext);\r\n\r\n  useEffect(() => {\r\n    getStations();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const { stations, getStations } = stationContext;\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <Map center={[50.270873, 16.25341]} zoom={5} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {stations !== null\r\n          ? stations.map((station) => {\r\n              return (\r\n                <Marker\r\n                  key={station._id}\r\n                  position={[station.latitude, station.longitude]}\r\n                  icon={myIcon}\r\n                >\r\n                  <Popup>\r\n                    <h2>{station.name}</h2>\r\n                  </Popup>\r\n                </Marker>\r\n              );\r\n            })\r\n          : null}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChargerMap;\r\n"]},"metadata":{},"sourceType":"module"}