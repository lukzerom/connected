{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/pages/ChargersMap.jsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport ReservationContext from \"../../context/reservations/reservationContext\";\nimport StationContext from \"../../context/stations/stationContext\";\nimport ProtectedMap from \"../layout/ProtectedMap\";\nimport ChargerDetails from \"../layout/ChargerDetails\";\nimport { Grid } from \"@material-ui/core\";\nimport DatePickerDialog from \"../layout/DatePickerDialog\";\nimport ReservationDialog from \"../layout/ReservationDialog\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles(theme => ({\n  bg: {\n    backgroundColor: \"#f4f6ff\",\n    minHeight: \"100vh\"\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst ChargersMap = () => {\n  const authContext = useContext(AuthContext);\n  const stationContext = useContext(StationContext);\n  const reservationContext = useContext(ReservationContext);\n  const [openError, setOpenError] = useState(false);\n  const [openSuccess, setOpenSuccess] = useState(false);\n  const {\n    error,\n    success,\n    setError,\n    setSuccess\n  } = reservationContext;\n  const {\n    getAvailableStations\n  } = stationContext;\n  useEffect(() => {\n    authContext.loadUser();\n    getAvailableStations(); //eslint-disable-next-line\n  }, []);\n\n  const handleCloseError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenError(false);\n    setError(null);\n  };\n\n  const handleCloseSuccess = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSuccess(false);\n    setSuccess(null);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: error || openError,\n    autoHideDuration: 6000,\n    onClose: handleCloseError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleCloseError,\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"You cant book your own station!\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: success || openSuccess,\n    autoHideDuration: 6000,\n    onClose: handleCloseSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleCloseSuccess,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"You just book this station!\")), /*#__PURE__*/React.createElement(DatePickerDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReservationDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedMap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    className: classes.bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChargerDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ChargersMap;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/pages/ChargersMap.jsx"],"names":["React","useContext","useEffect","useState","makeStyles","AuthContext","ReservationContext","StationContext","ProtectedMap","ChargerDetails","Grid","DatePickerDialog","ReservationDialog","Snackbar","MuiAlert","useStyles","theme","bg","backgroundColor","minHeight","Alert","props","ChargersMap","authContext","stationContext","reservationContext","openError","setOpenError","openSuccess","setOpenSuccess","error","success","setError","setSuccess","getAvailableStations","loadUser","handleCloseError","event","reason","handleCloseSuccess","classes"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport ReservationContext from \"../../context/reservations/reservationContext\";\r\nimport StationContext from \"../../context/stations/stationContext\";\r\nimport ProtectedMap from \"../layout/ProtectedMap\";\r\nimport ChargerDetails from \"../layout/ChargerDetails\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport DatePickerDialog from \"../layout/DatePickerDialog\";\r\nimport ReservationDialog from \"../layout/ReservationDialog\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bg: {\r\n    backgroundColor: \"#f4f6ff\",\r\n    minHeight: \"100vh\",\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ChargersMap = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const stationContext = useContext(StationContext);\r\n  const reservationContext = useContext(ReservationContext);\r\n  const [openError, setOpenError] = useState(false);\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  const { error, success, setError, setSuccess } = reservationContext;\r\n  const { getAvailableStations } = stationContext;\r\n\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    getAvailableStations();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleCloseError = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenError(false);\r\n    setError(null);\r\n  };\r\n\r\n  const handleCloseSuccess = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenSuccess(false);\r\n    setSuccess(null);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"row\">\r\n      <Snackbar\r\n        open={error || openError}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseError}\r\n      >\r\n        <Alert onClose={handleCloseError} severity=\"error\">\r\n          You cant book your own station!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={success || openSuccess}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSuccess}\r\n      >\r\n        <Alert onClose={handleCloseSuccess} severity=\"success\">\r\n          You just book this station!\r\n        </Alert>\r\n      </Snackbar>\r\n      <DatePickerDialog />\r\n      <ReservationDialog />\r\n      <Grid item xs={12} sm={7}>\r\n        <ProtectedMap />\r\n      </Grid>\r\n      <Grid item xs={12} sm={5} className={classes.bg}>\r\n        <ChargerDetails />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChargersMap;\r\n"]},"metadata":{},"sourceType":"module"}