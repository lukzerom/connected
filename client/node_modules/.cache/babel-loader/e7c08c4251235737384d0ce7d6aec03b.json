{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/context/cars/CarState.jsx\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport CarContext from \"./carContext\";\nimport carReducer from \"./carReducer\";\nimport { GET_USER_CARS, ADD_CAR, EDIT_CAR, DELETE_CAR, CAR_ERROR, SET_CURRENT_CAR, GET_CAR } from \"../types\";\n\nconst CarState = props => {\n  const initialState = {\n    cars: [],\n    editedCar: null,\n    oneCar: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(carReducer, initialState); //Get user cars\n\n  const getCars = async () => {\n    try {\n      const res = await axios.get(\"/api/cars\");\n      dispatch({\n        type: GET_USER_CARS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CAR_ERROR,\n        payload: err.res.msg\n      });\n    }\n  }; //Setting picked car to state\n\n\n  const setCar = car => {\n    dispatch({\n      type: SET_CURRENT_CAR,\n      payload: car\n    });\n  }; //Add new car\n\n\n  const addCar = async car => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/cars\", car, config);\n      dispatch({\n        type: ADD_CAR,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CAR_ERROR,\n        payload: err.msg\n      });\n    }\n  }; //Update car\n\n\n  const updateCar = async car => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/cars/${car.id}`, car, config);\n      dispatch({\n        type: EDIT_CAR,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CAR_ERROR,\n        payload: err.res.msg\n      });\n    }\n  }; //Delete Car\n\n\n  const deleteCar = async id => {\n    try {\n      await axios.delete(`/api/cars/${id}`);\n      dispatch({\n        type: DELETE_CAR,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CAR_ERROR,\n        payload: err.res.msg\n      });\n    }\n  }; //Get choosen car\n\n\n  const getCar = async id => {\n    try {\n      await axios.get(`/api/cars/${id}`);\n      dispatch({\n        type: GET_CAR,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CAR_ERROR,\n        payload: err.res.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CarContext.Provider, {\n    value: {\n      getCars,\n      setCar,\n      updateCar,\n      deleteCar,\n      addCar,\n      getCar,\n      oneCar: state.oneCar,\n      cars: state.cars,\n      editedCar: state.editedCar,\n      loading: state.loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default CarState;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/context/cars/CarState.jsx"],"names":["React","useReducer","axios","CarContext","carReducer","GET_USER_CARS","ADD_CAR","EDIT_CAR","DELETE_CAR","CAR_ERROR","SET_CURRENT_CAR","GET_CAR","CarState","props","initialState","cars","editedCar","oneCar","loading","state","dispatch","getCars","res","get","type","payload","data","err","msg","setCar","car","addCar","config","headers","post","updateCar","put","id","deleteCar","delete","getCar","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport CarContext from \"./carContext\";\r\nimport carReducer from \"./carReducer\";\r\nimport {\r\n  GET_USER_CARS,\r\n  ADD_CAR,\r\n  EDIT_CAR,\r\n  DELETE_CAR,\r\n  CAR_ERROR,\r\n  SET_CURRENT_CAR,\r\n  GET_CAR,\r\n} from \"../types\";\r\n\r\nconst CarState = (props) => {\r\n  const initialState = {\r\n    cars: [],\r\n    editedCar: null,\r\n    oneCar: null,\r\n    loading: true,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(carReducer, initialState);\r\n\r\n  //Get user cars\r\n  const getCars = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/cars\");\r\n      dispatch({ type: GET_USER_CARS, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CAR_ERROR, payload: err.res.msg });\r\n    }\r\n  };\r\n\r\n  //Setting picked car to state\r\n  const setCar = (car) => {\r\n    dispatch({\r\n      type: SET_CURRENT_CAR,\r\n      payload: car,\r\n    });\r\n  };\r\n\r\n  //Add new car\r\n\r\n  const addCar = async (car) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/cars\", car, config);\r\n      dispatch({ type: ADD_CAR, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CAR_ERROR, payload: err.msg });\r\n    }\r\n  };\r\n\r\n  //Update car\r\n  const updateCar = async (car) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(`/api/cars/${car.id}`, car, config);\r\n      dispatch({ type: EDIT_CAR, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CAR_ERROR, payload: err.res.msg });\r\n    }\r\n  };\r\n\r\n  //Delete Car\r\n  const deleteCar = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/cars/${id}`);\r\n      dispatch({ type: DELETE_CAR, payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: CAR_ERROR, payload: err.res.msg });\r\n    }\r\n  };\r\n\r\n  //Get choosen car\r\n  const getCar = async (id) => {\r\n    try {\r\n      await axios.get(`/api/cars/${id}`);\r\n      dispatch({ type: GET_CAR, payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: CAR_ERROR, payload: err.res.msg });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CarContext.Provider\r\n      value={{\r\n        getCars,\r\n        setCar,\r\n        updateCar,\r\n        deleteCar,\r\n        addCar,\r\n        getCar,\r\n        oneCar: state.oneCar,\r\n        cars: state.cars,\r\n        editedCar: state.editedCar,\r\n        loading: state.loading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CarState;\r\n"]},"metadata":{},"sourceType":"module"}