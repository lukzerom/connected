{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/DatePickerDialog.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { DialogActions, DialogContent } from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DatePicker from \"./DatePicker\";\nimport ReservationContext from \"../../context/reservations/reservationContext\";\nimport StationContext from \"../../context/stations/stationContext\";\nconst useStyles = makeStyles(theme => ({\n  stationsWrapper: {\n    backgroundColor: \"#f5f5f5\",\n    minHeight: \"100vh\",\n    width: \"100%\"\n  },\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  dialogContent: {\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: \"1rem 0;\"\n  }\n}));\n\nconst DatePickerDialog = () => {\n  const [alert, setAlert] = useState(false);\n  const reservationContext = useContext(ReservationContext);\n  const stationContext = useContext(StationContext);\n  const {\n    dateFrom,\n    dateTo,\n    isModalOpen,\n    toggleModal\n  } = reservationContext;\n  const {\n    getAvailableStations\n  } = stationContext;\n  const classes = useStyles();\n\n  const handleClose = () => {\n    toggleModal(false);\n  };\n\n  const handleSearch = () => {\n    if (dateFrom >= dateTo) {\n      setAlert(true);\n      const interval = window.setInterval(() => {\n        setAlert(false);\n        clearInterval(interval);\n      }, 5000);\n      return;\n    }\n\n    getAvailableStations(dateFrom, dateTo);\n    toggleModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: isModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiDialogTitle, {\n    disableTypography: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Enter arrival and departure dates\"), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"if you select the hours you are interested in, the application will only show you the stations available at that time. If you skip this step, you'll see the current status of the charging station.\"), alert ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Please enter a valid date range\") : null), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleSearch,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n};\n\nexport default DatePickerDialog;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/DatePickerDialog.jsx"],"names":["React","useState","useContext","makeStyles","Button","Divider","Dialog","DialogActions","DialogContent","MuiDialogTitle","IconButton","CloseIcon","Typography","Alert","DatePicker","ReservationContext","StationContext","useStyles","theme","stationsWrapper","backgroundColor","minHeight","width","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","dialogContent","divider","DatePickerDialog","alert","setAlert","reservationContext","stationContext","dateFrom","dateTo","isModalOpen","toggleModal","getAvailableStations","classes","handleClose","handleSearch","interval","window","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { DialogActions, DialogContent } from \"@material-ui/core\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport ReservationContext from \"../../context/reservations/reservationContext\";\r\nimport StationContext from \"../../context/stations/stationContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stationsWrapper: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    minHeight: \"100vh\",\r\n    width: \"100%\",\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  dialogContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    margin: \"1rem 0;\",\r\n  },\r\n}));\r\n\r\nconst DatePickerDialog = () => {\r\n  const [alert, setAlert] = useState(false);\r\n  const reservationContext = useContext(ReservationContext);\r\n  const stationContext = useContext(StationContext);\r\n\r\n  const { dateFrom, dateTo, isModalOpen, toggleModal } = reservationContext;\r\n\r\n  const { getAvailableStations } = stationContext;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    toggleModal(false);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (dateFrom >= dateTo) {\r\n      setAlert(true);\r\n      const interval = window.setInterval(() => {\r\n        setAlert(false);\r\n        clearInterval(interval);\r\n      }, 5000);\r\n      return;\r\n    }\r\n    getAvailableStations(dateFrom, dateTo);\r\n    toggleModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={isModalOpen}\r\n      >\r\n        <MuiDialogTitle disableTypography>\r\n          <Typography variant=\"h6\">\r\n            Enter arrival and departure dates\r\n          </Typography>\r\n\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </MuiDialogTitle>\r\n        <DialogContent dividers>\r\n          <DatePicker />\r\n          <Divider className={classes.divider} />\r\n          <Typography>\r\n            if you select the hours you are interested in, the application will\r\n            only show you the stations available at that time. If you skip this\r\n            step, you'll see the current status of the charging station.\r\n          </Typography>\r\n          {alert ? (\r\n            <Alert severity=\"error\">Please enter a valid date range</Alert>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleSearch} color=\"primary\">\r\n            Search\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePickerDialog;\r\n"]},"metadata":{},"sourceType":"module"}