{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/ProtectedMap.jsx\";\nimport React, { useContext } from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport StationContext from \"../../context/stations/stationContext\";\nimport bolt from \"../../assets/bolt.svg\";\nimport L from \"leaflet\";\nconst myIcon = L.icon({\n  iconUrl: bolt,\n  iconSize: [50, 50],\n  iconAnchor: [25, 50],\n  popupAnchor: [-3, -76]\n}); // Z powodu problemów z animacją Leaflet - dodałem taką flagę aby animowane było tylko przeskakiwanie po stacjach i rozwiązałem problem :)\n\nlet animateflag = false;\n\nconst ChargerMap = () => {\n  const stationContext = useContext(StationContext);\n  const {\n    position,\n    setPosition,\n    setZoom,\n    zoom,\n    setStation,\n    avaiableStations\n  } = stationContext;\n\n  const changePosition = e => {\n    animateflag = true;\n    let pickedStation = avaiableStations.filter(station => station._id === e.target.options.id);\n    let lat = Number(pickedStation[0].latitude);\n    let lng = Number(pickedStation[0].longitude);\n    setPosition([lat, lng]);\n    setStation(pickedStation[0]);\n  };\n\n  const viewport = {\n    center: position,\n    zoom: zoom\n  };\n\n  const onViewportChanged = viewport => {\n    setZoom(viewport.zoom);\n    setPosition(viewport.center);\n    animateflag = false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container xs=6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: position,\n    viewport: viewport,\n    onViewportChanged: onViewportChanged,\n    animate: animateflag,\n    easeLinearity: 0.35,\n    attributionControl: true,\n    useFlyTo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), avaiableStations !== null ? avaiableStations.map(station => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: station._id,\n      id: station._id,\n      onClick: changePosition,\n      position: [station.latitude, station.longitude],\n      icon: myIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    });\n  }) : null));\n};\n\nexport default ChargerMap;","map":{"version":3,"sources":["/Users/lukaszzeromski/Desktop/conntected/connected/client/src/components/layout/ProtectedMap.jsx"],"names":["React","useContext","Map","TileLayer","Marker","StationContext","L","myIcon","icon","iconUrl","bolt","iconSize","iconAnchor","popupAnchor","animateflag","ChargerMap","stationContext","position","setPosition","setZoom","zoom","setStation","avaiableStations","changePosition","e","pickedStation","filter","station","_id","target","options","id","lat","Number","latitude","lng","longitude","viewport","center","onViewportChanged","map"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport StationContext from \"../../context/stations/stationContext\";\r\nimport bolt from \"../../assets/bolt.svg\";\r\nimport L from \"leaflet\";\r\n\r\nconst myIcon = L.icon({\r\n  iconUrl: bolt,\r\n  iconSize: [50, 50],\r\n  iconAnchor: [25, 50],\r\n  popupAnchor: [-3, -76],\r\n});\r\n// Z powodu problemów z animacją Leaflet - dodałem taką flagę aby animowane było tylko przeskakiwanie po stacjach i rozwiązałem problem :)\r\nlet animateflag = false;\r\n\r\nconst ChargerMap = () => {\r\n  const stationContext = useContext(StationContext);\r\n  const {\r\n    position,\r\n    setPosition,\r\n    setZoom,\r\n    zoom,\r\n    setStation,\r\n    avaiableStations,\r\n  } = stationContext;\r\n\r\n  const changePosition = (e) => {\r\n    animateflag = true;\r\n    let pickedStation = avaiableStations.filter(\r\n      (station) => station._id === e.target.options.id\r\n    );\r\n\r\n    let lat = Number(pickedStation[0].latitude);\r\n    let lng = Number(pickedStation[0].longitude);\r\n\r\n    setPosition([lat, lng]);\r\n    setStation(pickedStation[0]);\r\n  };\r\n\r\n  const viewport = {\r\n    center: position,\r\n    zoom: zoom,\r\n  };\r\n\r\n  const onViewportChanged = (viewport) => {\r\n    setZoom(viewport.zoom);\r\n    setPosition(viewport.center);\r\n    animateflag = false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container xs=6\">\r\n      <Map\r\n        center={position}\r\n        viewport={viewport}\r\n        onViewportChanged={onViewportChanged}\r\n        animate={animateflag}\r\n        easeLinearity={0.35}\r\n        attributionControl={true}\r\n        useFlyTo={true}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n\r\n        {avaiableStations !== null\r\n          ? avaiableStations.map((station) => {\r\n              return (\r\n                <Marker\r\n                  key={station._id}\r\n                  id={station._id}\r\n                  onClick={changePosition}\r\n                  position={[station.latitude, station.longitude]}\r\n                  icon={myIcon}\r\n                ></Marker>\r\n              );\r\n            })\r\n          : null}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChargerMap;\r\n"]},"metadata":{},"sourceType":"module"}